// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: brokersvc.proto

package brokersvc

import (
	protocol "github.com/jxskiss/nonamegw/proto/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushTarget_Type int32

const (
	PushTarget_CONNECTION             PushTarget_Type = 0
	PushTarget_USER                   PushTarget_Type = 1
	PushTarget_USER_DEVICE            PushTarget_Type = 2
	PushTarget_UNAUTHENTICATED_DEVICE PushTarget_Type = 3
)

// Enum value maps for PushTarget_Type.
var (
	PushTarget_Type_name = map[int32]string{
		0: "CONNECTION",
		1: "USER",
		2: "USER_DEVICE",
		3: "UNAUTHENTICATED_DEVICE",
	}
	PushTarget_Type_value = map[string]int32{
		"CONNECTION":             0,
		"USER":                   1,
		"USER_DEVICE":            2,
		"UNAUTHENTICATED_DEVICE": 3,
	}
)

func (x PushTarget_Type) Enum() *PushTarget_Type {
	p := new(PushTarget_Type)
	*p = x
	return p
}

func (x PushTarget_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushTarget_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_brokersvc_proto_enumTypes[0].Descriptor()
}

func (PushTarget_Type) Type() protoreflect.EnumType {
	return &file_brokersvc_proto_enumTypes[0]
}

func (x PushTarget_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushTarget_Type.Descriptor instead.
func (PushTarget_Type) EnumDescriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{4, 0}
}

type Authorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     int64  `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
}

func (x *Authorization) Reset() {
	*x = Authorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorization) ProtoMessage() {}

func (x *Authorization) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorization.ProtoReflect.Descriptor instead.
func (*Authorization) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{0}
}

func (x *Authorization) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Authorization) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth      *Authorization `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	UserIds   []int64        `protobuf:"varint,2,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	DeviceIds []int64        `protobuf:"varint,3,rep,packed,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{1}
}

func (x *QueryRequest) GetAuth() *Authorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *QueryRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *QueryRequest) GetDeviceIds() []int64 {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConnections   map[int64]*protocol.ConnectionList `protobuf:"bytes,1,rep,name=user_connections,json=userConnections,proto3" json:"user_connections,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeviceConnections map[int64]*protocol.ConnectionList `protobuf:"bytes,2,rep,name=device_connections,json=deviceConnections,proto3" json:"device_connections,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{2}
}

func (x *QueryResponse) GetUserConnections() map[int64]*protocol.ConnectionList {
	if x != nil {
		return x.UserConnections
	}
	return nil
}

func (x *QueryResponse) GetDeviceConnections() map[int64]*protocol.ConnectionList {
	if x != nil {
		return x.DeviceConnections
	}
	return nil
}

type UserDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId int64 `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *UserDevice) Reset() {
	*x = UserDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDevice) ProtoMessage() {}

func (x *UserDevice) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDevice.ProtoReflect.Descriptor instead.
func (*UserDevice) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{3}
}

func (x *UserDevice) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserDevice) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type PushTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PushTarget_Type `protobuf:"varint,1,opt,name=type,proto3,enum=brokersvc.PushTarget_Type" json:"type,omitempty"`
	// Types that are assignable to Target:
	//	*PushTarget_Connections_
	//	*PushTarget_Users_
	//	*PushTarget_UserDevices_
	//	*PushTarget_Devices_
	Target         isPushTarget_Target `protobuf_oneof:"target"`
	VersionFilters []string            `protobuf:"bytes,8,rep,name=version_filters,json=versionFilters,proto3" json:"version_filters,omitempty"`
}

func (x *PushTarget) Reset() {
	*x = PushTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTarget) ProtoMessage() {}

func (x *PushTarget) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTarget.ProtoReflect.Descriptor instead.
func (*PushTarget) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{4}
}

func (x *PushTarget) GetType() PushTarget_Type {
	if x != nil {
		return x.Type
	}
	return PushTarget_CONNECTION
}

func (m *PushTarget) GetTarget() isPushTarget_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *PushTarget) GetConnections() *PushTarget_Connections {
	if x, ok := x.GetTarget().(*PushTarget_Connections_); ok {
		return x.Connections
	}
	return nil
}

func (x *PushTarget) GetUsers() *PushTarget_Users {
	if x, ok := x.GetTarget().(*PushTarget_Users_); ok {
		return x.Users
	}
	return nil
}

func (x *PushTarget) GetUserDevices() *PushTarget_UserDevices {
	if x, ok := x.GetTarget().(*PushTarget_UserDevices_); ok {
		return x.UserDevices
	}
	return nil
}

func (x *PushTarget) GetDevices() *PushTarget_Devices {
	if x, ok := x.GetTarget().(*PushTarget_Devices_); ok {
		return x.Devices
	}
	return nil
}

func (x *PushTarget) GetVersionFilters() []string {
	if x != nil {
		return x.VersionFilters
	}
	return nil
}

type isPushTarget_Target interface {
	isPushTarget_Target()
}

type PushTarget_Connections_ struct {
	Connections *PushTarget_Connections `protobuf:"bytes,2,opt,name=connections,proto3,oneof"`
}

type PushTarget_Users_ struct {
	Users *PushTarget_Users `protobuf:"bytes,3,opt,name=users,proto3,oneof"`
}

type PushTarget_UserDevices_ struct {
	UserDevices *PushTarget_UserDevices `protobuf:"bytes,4,opt,name=user_devices,json=userDevices,proto3,oneof"`
}

type PushTarget_Devices_ struct {
	Devices *PushTarget_Devices `protobuf:"bytes,5,opt,name=devices,proto3,oneof"`
}

func (*PushTarget_Connections_) isPushTarget_Target() {}

func (*PushTarget_Users_) isPushTarget_Target() {}

func (*PushTarget_UserDevices_) isPushTarget_Target() {}

func (*PushTarget_Devices_) isPushTarget_Target() {}

type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Authorization    `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Target  *PushTarget       `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Content *protocol.Content `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{5}
}

func (x *PushRequest) GetAuth() *Authorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PushRequest) GetTarget() *PushTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *PushRequest) GetContent() *protocol.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

type PushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushResponse) Reset() {
	*x = PushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushResponse) ProtoMessage() {}

func (x *PushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushResponse.ProtoReflect.Descriptor instead.
func (*PushResponse) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{6}
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *Authorization `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Target *PushTarget    `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{7}
}

func (x *SyncRequest) GetAuth() *Authorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SyncRequest) GetTarget() *PushTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type SyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{8}
}

type BroadcastTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BroadcastTarget) Reset() {
	*x = BroadcastTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTarget) ProtoMessage() {}

func (x *BroadcastTarget) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTarget.ProtoReflect.Descriptor instead.
func (*BroadcastTarget) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{9}
}

type BroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Authorization    `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Target  *BroadcastTarget  `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Content *protocol.Content `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *BroadcastRequest) Reset() {
	*x = BroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastRequest) ProtoMessage() {}

func (x *BroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastRequest.ProtoReflect.Descriptor instead.
func (*BroadcastRequest) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{10}
}

func (x *BroadcastRequest) GetAuth() *Authorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *BroadcastRequest) GetTarget() *BroadcastTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *BroadcastRequest) GetContent() *protocol.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

type BroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastId string `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
}

func (x *BroadcastResponse) Reset() {
	*x = BroadcastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastResponse) ProtoMessage() {}

func (x *BroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastResponse.ProtoReflect.Descriptor instead.
func (*BroadcastResponse) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{11}
}

func (x *BroadcastResponse) GetBroadcastId() string {
	if x != nil {
		return x.BroadcastId
	}
	return ""
}

type StopBroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth        *Authorization `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	BroadcastId string         `protobuf:"bytes,2,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
}

func (x *StopBroadcastRequest) Reset() {
	*x = StopBroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBroadcastRequest) ProtoMessage() {}

func (x *StopBroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBroadcastRequest.ProtoReflect.Descriptor instead.
func (*StopBroadcastRequest) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{12}
}

func (x *StopBroadcastRequest) GetAuth() *Authorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *StopBroadcastRequest) GetBroadcastId() string {
	if x != nil {
		return x.BroadcastId
	}
	return ""
}

type StopBroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopBroadcastResponse) Reset() {
	*x = StopBroadcastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBroadcastResponse) ProtoMessage() {}

func (x *StopBroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBroadcastResponse.ProtoReflect.Descriptor instead.
func (*StopBroadcastResponse) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{13}
}

type SignTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Authorization `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	UserId   int64          `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId int64          `protobuf:"varint,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *SignTokenRequest) Reset() {
	*x = SignTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTokenRequest) ProtoMessage() {}

func (x *SignTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTokenRequest.ProtoReflect.Descriptor instead.
func (*SignTokenRequest) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{14}
}

func (x *SignTokenRequest) GetAuth() *Authorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SignTokenRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SignTokenRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type SignTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpireAt int64  `protobuf:"varint,2,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
}

func (x *SignTokenResponse) Reset() {
	*x = SignTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTokenResponse) ProtoMessage() {}

func (x *SignTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTokenResponse.ProtoReflect.Descriptor instead.
func (*SignTokenResponse) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{15}
}

func (x *SignTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SignTokenResponse) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

type PushTarget_Connections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionIds []string `protobuf:"bytes,1,rep,name=connection_ids,json=connectionIds,proto3" json:"connection_ids,omitempty"`
}

func (x *PushTarget_Connections) Reset() {
	*x = PushTarget_Connections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTarget_Connections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTarget_Connections) ProtoMessage() {}

func (x *PushTarget_Connections) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTarget_Connections.ProtoReflect.Descriptor instead.
func (*PushTarget_Connections) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PushTarget_Connections) GetConnectionIds() []string {
	if x != nil {
		return x.ConnectionIds
	}
	return nil
}

type PushTarget_Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *PushTarget_Users) Reset() {
	*x = PushTarget_Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTarget_Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTarget_Users) ProtoMessage() {}

func (x *PushTarget_Users) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTarget_Users.ProtoReflect.Descriptor instead.
func (*PushTarget_Users) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{4, 1}
}

func (x *PushTarget_Users) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type PushTarget_UserDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDevices []*UserDevice `protobuf:"bytes,1,rep,name=user_devices,json=userDevices,proto3" json:"user_devices,omitempty"`
}

func (x *PushTarget_UserDevices) Reset() {
	*x = PushTarget_UserDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTarget_UserDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTarget_UserDevices) ProtoMessage() {}

func (x *PushTarget_UserDevices) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTarget_UserDevices.ProtoReflect.Descriptor instead.
func (*PushTarget_UserDevices) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{4, 2}
}

func (x *PushTarget_UserDevices) GetUserDevices() []*UserDevice {
	if x != nil {
		return x.UserDevices
	}
	return nil
}

type PushTarget_Devices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIds []int64 `protobuf:"varint,1,rep,packed,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *PushTarget_Devices) Reset() {
	*x = PushTarget_Devices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brokersvc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTarget_Devices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTarget_Devices) ProtoMessage() {}

func (x *PushTarget_Devices) ProtoReflect() protoreflect.Message {
	mi := &file_brokersvc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTarget_Devices.ProtoReflect.Descriptor instead.
func (*PushTarget_Devices) Descriptor() ([]byte, []int) {
	return file_brokersvc_proto_rawDescGZIP(), []int{4, 3}
}

func (x *PushTarget_Devices) GetDeviceIds() []int64 {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

var File_brokersvc_proto protoreflect.FileDescriptor

var file_brokersvc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x1a, 0x0e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x0d,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x22, 0x76, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x87, 0x03, 0x0a, 0x0d,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x73, 0x76, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5e, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5c, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x16, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x42, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x05, 0x0a, 0x0a, 0x50, 0x75,
	0x73, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73,
	0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x33, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x34, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x1a, 0x22, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x1a, 0x47, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x28, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x4d, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x6a, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2d, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x0e, 0x0a, 0x0c,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22,
	0xa1, 0x01, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x11, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x14, 0x53,
	0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a,
	0x10, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x32, 0x9a, 0x03,
	0x0a, 0x06, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x17, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x16, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76,
	0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12,
	0x1f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1b, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x78, 0x73, 0x6b, 0x69, 0x73, 0x73,
	0x2f, 0x6e, 0x6f, 0x6e, 0x61, 0x6d, 0x65, 0x67, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x76, 0x63, 0x3b, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_brokersvc_proto_rawDescOnce sync.Once
	file_brokersvc_proto_rawDescData = file_brokersvc_proto_rawDesc
)

func file_brokersvc_proto_rawDescGZIP() []byte {
	file_brokersvc_proto_rawDescOnce.Do(func() {
		file_brokersvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_brokersvc_proto_rawDescData)
	})
	return file_brokersvc_proto_rawDescData
}

var file_brokersvc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_brokersvc_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_brokersvc_proto_goTypes = []interface{}{
	(PushTarget_Type)(0),            // 0: brokersvc.PushTarget.Type
	(*Authorization)(nil),           // 1: brokersvc.Authorization
	(*QueryRequest)(nil),            // 2: brokersvc.QueryRequest
	(*QueryResponse)(nil),           // 3: brokersvc.QueryResponse
	(*UserDevice)(nil),              // 4: brokersvc.UserDevice
	(*PushTarget)(nil),              // 5: brokersvc.PushTarget
	(*PushRequest)(nil),             // 6: brokersvc.PushRequest
	(*PushResponse)(nil),            // 7: brokersvc.PushResponse
	(*SyncRequest)(nil),             // 8: brokersvc.SyncRequest
	(*SyncResponse)(nil),            // 9: brokersvc.SyncResponse
	(*BroadcastTarget)(nil),         // 10: brokersvc.BroadcastTarget
	(*BroadcastRequest)(nil),        // 11: brokersvc.BroadcastRequest
	(*BroadcastResponse)(nil),       // 12: brokersvc.BroadcastResponse
	(*StopBroadcastRequest)(nil),    // 13: brokersvc.StopBroadcastRequest
	(*StopBroadcastResponse)(nil),   // 14: brokersvc.StopBroadcastResponse
	(*SignTokenRequest)(nil),        // 15: brokersvc.SignTokenRequest
	(*SignTokenResponse)(nil),       // 16: brokersvc.SignTokenResponse
	nil,                             // 17: brokersvc.QueryResponse.UserConnectionsEntry
	nil,                             // 18: brokersvc.QueryResponse.DeviceConnectionsEntry
	(*PushTarget_Connections)(nil),  // 19: brokersvc.PushTarget.Connections
	(*PushTarget_Users)(nil),        // 20: brokersvc.PushTarget.Users
	(*PushTarget_UserDevices)(nil),  // 21: brokersvc.PushTarget.UserDevices
	(*PushTarget_Devices)(nil),      // 22: brokersvc.PushTarget.Devices
	(*protocol.Content)(nil),        // 23: protocol.Content
	(*protocol.ConnectionList)(nil), // 24: protocol.ConnectionList
}
var file_brokersvc_proto_depIdxs = []int32{
	1,  // 0: brokersvc.QueryRequest.auth:type_name -> brokersvc.Authorization
	17, // 1: brokersvc.QueryResponse.user_connections:type_name -> brokersvc.QueryResponse.UserConnectionsEntry
	18, // 2: brokersvc.QueryResponse.device_connections:type_name -> brokersvc.QueryResponse.DeviceConnectionsEntry
	0,  // 3: brokersvc.PushTarget.type:type_name -> brokersvc.PushTarget.Type
	19, // 4: brokersvc.PushTarget.connections:type_name -> brokersvc.PushTarget.Connections
	20, // 5: brokersvc.PushTarget.users:type_name -> brokersvc.PushTarget.Users
	21, // 6: brokersvc.PushTarget.user_devices:type_name -> brokersvc.PushTarget.UserDevices
	22, // 7: brokersvc.PushTarget.devices:type_name -> brokersvc.PushTarget.Devices
	1,  // 8: brokersvc.PushRequest.auth:type_name -> brokersvc.Authorization
	5,  // 9: brokersvc.PushRequest.target:type_name -> brokersvc.PushTarget
	23, // 10: brokersvc.PushRequest.content:type_name -> protocol.Content
	1,  // 11: brokersvc.SyncRequest.auth:type_name -> brokersvc.Authorization
	5,  // 12: brokersvc.SyncRequest.target:type_name -> brokersvc.PushTarget
	1,  // 13: brokersvc.BroadcastRequest.auth:type_name -> brokersvc.Authorization
	10, // 14: brokersvc.BroadcastRequest.target:type_name -> brokersvc.BroadcastTarget
	23, // 15: brokersvc.BroadcastRequest.content:type_name -> protocol.Content
	1,  // 16: brokersvc.StopBroadcastRequest.auth:type_name -> brokersvc.Authorization
	1,  // 17: brokersvc.SignTokenRequest.auth:type_name -> brokersvc.Authorization
	24, // 18: brokersvc.QueryResponse.UserConnectionsEntry.value:type_name -> protocol.ConnectionList
	24, // 19: brokersvc.QueryResponse.DeviceConnectionsEntry.value:type_name -> protocol.ConnectionList
	4,  // 20: brokersvc.PushTarget.UserDevices.user_devices:type_name -> brokersvc.UserDevice
	2,  // 21: brokersvc.Broker.Query:input_type -> brokersvc.QueryRequest
	6,  // 22: brokersvc.Broker.Push:input_type -> brokersvc.PushRequest
	8,  // 23: brokersvc.Broker.Sync:input_type -> brokersvc.SyncRequest
	11, // 24: brokersvc.Broker.Broadcast:input_type -> brokersvc.BroadcastRequest
	13, // 25: brokersvc.Broker.StopBroadcast:input_type -> brokersvc.StopBroadcastRequest
	15, // 26: brokersvc.Broker.SignToken:input_type -> brokersvc.SignTokenRequest
	3,  // 27: brokersvc.Broker.Query:output_type -> brokersvc.QueryResponse
	7,  // 28: brokersvc.Broker.Push:output_type -> brokersvc.PushResponse
	9,  // 29: brokersvc.Broker.Sync:output_type -> brokersvc.SyncResponse
	12, // 30: brokersvc.Broker.Broadcast:output_type -> brokersvc.BroadcastResponse
	14, // 31: brokersvc.Broker.StopBroadcast:output_type -> brokersvc.StopBroadcastResponse
	16, // 32: brokersvc.Broker.SignToken:output_type -> brokersvc.SignTokenResponse
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_brokersvc_proto_init() }
func file_brokersvc_proto_init() {
	if File_brokersvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_brokersvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBroadcastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTarget_Connections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTarget_Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTarget_UserDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brokersvc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTarget_Devices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_brokersvc_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PushTarget_Connections_)(nil),
		(*PushTarget_Users_)(nil),
		(*PushTarget_UserDevices_)(nil),
		(*PushTarget_Devices_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brokersvc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brokersvc_proto_goTypes,
		DependencyIndexes: file_brokersvc_proto_depIdxs,
		EnumInfos:         file_brokersvc_proto_enumTypes,
		MessageInfos:      file_brokersvc_proto_msgTypes,
	}.Build()
	File_brokersvc_proto = out.File
	file_brokersvc_proto_rawDesc = nil
	file_brokersvc_proto_goTypes = nil
	file_brokersvc_proto_depIdxs = nil
}
